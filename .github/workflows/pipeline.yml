name: Build, Test, and Deploy

on:
  push:
    branches: [ "main" ]    # Събитията, на които да реагира (пушване в main)
  pull_request:
    branches: [ "main" ]    # Събитията, на които да реагира (pull request за main)

jobs:
  build-unit-test:
    runs-on: ubuntu-latest   # Определя средата, в която да се изпълнява

    steps:
    - name: Checkout Repository on the machine
      uses: actions/checkout@v4   # Стъпка за изтегляне на кода от хранилището
    - name: Use Node.js version 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x       # Задаване на версия на Node.js
        cache: 'npm'             # Кеширане на npm пакетите
    - name: Install the Dependencies
      run: npm install           # Инсталиране на зависимостите
    - name: Run Unit tests
      run: npm run test:unit     # Изпълнение на unit тестове
    - name: Display SoftUni username
      run: echo "AneVG"          # Извеждане на потребителско име от SoftUni

  ui-tests:
    runs-on: ubuntu-latest   # Определя средата, в която да се изпълнява
    needs: build-unit-test   # Изисква успешно завършване на предходния job
    steps:
    - name: Checkout Repository on the machine
      uses: actions/checkout@v4   # Стъпка за изтегляне на кода от хранилището
    - name: Use Node.js version 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x       # Задаване на версия на Node.js
        cache: 'npm'             # Кеширане на npm пакетите
    - name: Install the Dependencies
      run: npm install           # Инсталиране на зависимостите
    - name: Install Playwright browsers
      run: npx playwright install # Инсталиране на Playwright браузъри
    - name: Start the application
      run: npm start &           # Стартиране на приложението във фонов режим
    - name: Run UI tests
      run: npm run test:ui       # Изпълнение на UI тестове

  deploy:
    runs-on: ubuntu-latest
    needs: ui-tests 
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.MY_RENDER_SERVICE_ID }}
          api-key: ${{ secrets.MY_RENDER_API_KEY }}


